#!/bin/bash

# This script allows the user to authenticate through the UPMC CAS Service

source logins


# The service to be called, and a url-encoded version (the url encoding isn't perfect, if you're encoding complex stuff you may wish to replace with a different method)
DEST="$1"
ENCODED_DEST=$(echo "$DEST" | perl -p -e 's/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg' | sed 's/%2E/./g' | sed 's/%0A//g')
echo $ENCODED_DEST

CAS_HOSTNAME=auth1.ent.upmc.fr

#Authentication details 
USERNAME=$2
PASSWORD=$3

#Temporary files used by curl to store cookies and http headers
COOKIE_JAR=.cookieJar
HEADER_DUMP_DEST=.headers
rm -f $COOKIE_JAR
rm -f $HEADER_DUMP_DEST

#The script itself is below

#Visit CAS and get a login form. This includes a unique ID for the form, which we will store in CAS_ID and attach to our form submission. 
#jsessionid cookie will be set here
CAS_ID=$(curl -s -c $COOKIE_JAR https://$CAS_HOSTNAME/cas/login?service=$ENCODED_DEST | grep name=.lt | sed 's/.*value..//' | sed 's/\".*//')

if [[ "$CAS_ID" = "" ]]; then
    echo "Login ticket is empty."
    exit 1
fi

#Submit the login form using the cookies saved in the cookie jar and the form submission ID just extracted
#We keep the headers from this request as the return value should be a 302 including a "ticket" param which we will need in the next request
curl -s --data "username=$USERNAME&password=$PASSWORD&lt=$CAS_ID&execution=e1s1&_eventId=submit" \
     -i -b $COOKIE_JAR \
     -c $COOKIE_JAR https://$CAS_HOSTNAME/cas/login?service=$ENCODED_DEST \
     -D $HEADER_DUMP_DEST -o /dev/null

#Visit the URL with the ticket param to finally set the casprivacy and, MOD_AUTH_CAS cookie. 
#Now we've got a MOD_AUTH_CAS cookie, anything we do in this session will pass straight through CAS
CURL_DEST=$(grep Location $HEADER_DUMP_DEST | sed 's/Location: //')

if [[ "$CURL_DEST" = "" ]]; then
    echo "Cannot login. Check if you can login in a browser using user/pass = $USERNAME/$PASSWORD and the following url: https://$CAS_HOSTNAME/cas/login?service=$ENCODED_DEST"
    exit 1
fi

CURL_DEST=${CURL_DEST%$'\r'}
curl  -s -b $COOKIE_JAR -c $COOKIE_JAR $CURL_DEST


#Visit the place we actually wanted to go to
wget --tries=1 --load-cookies $COOKIE_JAR "$DEST"
